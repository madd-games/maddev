#! /bin/sh
# Configure script for the Madd Development Tools
# List of all options (defaults detected later)
prefix=""
exec_prefix=""
host=""
target=""
bindir=""
libdir=""

# Derived options
hostcc=""
hostar=""

# Detect some parameters
srcdir="`dirname $0`"
if [ "$srcdir" = "." ]
then
	echo >&2 "$0: error: cannot build in the source directory"
	exit 1
fi

# Parse the command-line options
for i in "$@"
do
case $i in
	--help)
		cat >&2 "$srcdir/configure.help"
		exit 1
		;;
	
	--host=*)
		host=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;

	--target=*)
		target=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;
	
	--prefix=*)
		prefix=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;
	
	--exec-prefix=*)
		exec_prefix=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;
	
	--bindir=*)
		bindir=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;
	
	--libdir=*)
		libdir=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;
	
	*)
		echo >&2 "$0: error: unknown command-line option $i"
		echo >&2 "run '$0 --help' for more information"
		exit 1
esac
done

# Set defaults if options are missing, and detect the derived options.
if [ "$prefix" = "" ]
then
	prefix="/usr"
fi

if [ "$exec_prefix" = "" ]
then
	exec_prefix="$prefix"
fi

if [ "$host" = "" ]
then
	if command -v cc > /dev/null 2>&1
	then
		hostcc="cc"
		hostar="ar"
	elif command -v gcc > /dev/null 2>&1
	then
		hostcc="gcc"
		hostar="ar"
	else
		echo >&2 "$0: error: no host compiler found!"
		exit 1
	fi
	
	host="`$hostcc -dumpmachine`"
else
	if command -v $host-cc > /dev/null 2>&1
	then
		hostcc="$host-cc"
		hostar="$host-ar"
	elif command -v $host-gcc > /dev/null 2>&1
	then
		hostcc="$host-gcc"
		hostar="$host-ar"
	elif command -v cc > /dev/null 2>&1
	then
		hostcc="cc"
		hostar="ar"
	elif command -v gcc > /dev/null 2>&1
	then
		hostcc="gcc"
		hostar="ar"
	else
		echo >&2 "$0: error: no host compiler found!"
		exit 1
	fi
fi

if ! command -v $hostar > /dev/null 2>&1
then
	echo >&2 "$0: command $hostar not found!"
	exit 1
fi

if [ "$target" = "" ]
then
	target="$host"
fi

if [ "$bindir" = "" ]
then
	bindir="$exec_prefix/bin"
fi

if [ "$libdir" = "" ]
then
	libdir="$exec_prefix/lib"
fi

if ! command -v cc > /dev/null 2>&1
then
	echo >&2 "$0: build compiler (cc) not found!"
	exit 1
fi

# Configure the other subsystems
. $srcdir/mac/config.sub
. $srcdir/libcommon/config.sub
. $srcdir/libobj/config.sub
. $srcdir/as/config.sub

# Write options to header file (maddev-config.h)
printf "generating maddev-config.h... "
echo '/* automatically generated by configure - DO NOT EDIT! */' > maddev-config.h
echo "#ifndef	MADDEV_CONFIG_H" >> maddev-config.h
echo "#define	MADDEV_CONFIG_H" >> maddev-config.h
echo "" >> maddev-config.h
echo "#define	MADDEV_TARGET		\"$target\"" >> maddev-config.h
echo "#define	MADDEV_HOST		\"$target\"" >> maddev-config.h
echo "" >> maddev-config.h
echo "#endif /* MADDEV_CONFIG_H */" >> maddev-config.h
echo "done"

# Write options to makefile
printf "generating Makefile... "
echo '# Automatically generated by configure - DO NOT EDIT! */' > Makefile
echo "HOSTCC=$hostcc" >> Makefile
echo "HOSTAR=$hostar" >> Makefile
echo "BUILDCC=cc" >> Makefile
echo "SRCDIR=$srcdir" >> Makefile
echo "MAC_EXTRA_CFLAGS=$mac_extra_cflags" >> Makefile
echo "MAC_ARCHDIR=$mac_archdir" >> Makefile
echo "LIBOBJ_BACKEND=$libobj_backend" >> Makefile
echo "LIBOBJ_EXTRA_CFLAGS=$libobj_extra_cflags" >> Makefile
echo "LIBCOMMON_HOSTLIB=$libcommon_hostlib" >> Makefile
echo "LIBCOMMON_EXTRA_LDFLAGS=$libcommon_ldflags" >> Makefile
echo "AS_FAMILY=$as_family" >> Makefile
echo "AS_EXTRA_CFLAGS=$as_extra_cflags" >> Makefile
echo "include \$(SRCDIR)/build.mk" >> Makefile
echo "done"
