# mac/config.sub
# Determine configuration options for the macro-compiler
mac_archdir=""
mac_extra_cflags=""
mac_target_abi=""

# First determine architecture-specific options. We must set the 'mac_archdir' shell variable
# to the name of a subdirectory in mac/arch which contains additional source and include files
# for the given architecture. We also need to add whatever C compiler flags we need (for example
# macro definitions) to the 'mac_extra_cflags' variable.
case $target in
	x86_64-*)
		mac_archdir="x86_64"
		mac_extra_cflags="$mac_extra_cflags -DTARGET_AMD64 -DTARGET_X86_64"
		;;
		
	*)
		echo >&2 "$0: error: mac: target '$target' not supported!"
		exit 1
		;;
esac

# Now determine options for arch/OS combinations. This may for example decide the calling convention
# for a given OS on the specific architecture. We add extra flags to 'mac_extra_cflags' wherever
# necessary.
case $target in
	x86_64-linux*)
		mac_target_abi="sysv"
		;;
	
	x86_64-elf)
		mac_target_abi="sysv"
		;;
		
	*)
		echo >&2 "$0: error: mac: target '$target' not supported!"
		exit 1
		;;
esac

# Now check parameters
if [ "$mac_target_abi" = "" ]
then
	echo >&2 "$0: error: mac: target ABI not specified!"
	exit 1
fi

mac_extra_cflags="$mac_extra_cflags -DMAC_ABI='\"$mac_target_abi\"'"
